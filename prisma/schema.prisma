generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  posts     Post[]
  votes     Vote[]
  apiTokens ApiToken[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  status    String   @default("draft")
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Fact {
  id        Int      @id @default(autoincrement())
  claim     String
  answer    String
  createdAt DateTime @default(now())
  votes     Vote[]
}

model Vote {
  id        Int      @id @default(autoincrement())
  factId    Int
  userId    Int
  rating    String   // "helpful", "somewhat_helpful", "not_helpful"
  createdAt DateTime @default(now())
  fact      Fact     @relation(fields: [factId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([factId, userId])
}

model ApiToken {
  id          Int      @id @default(autoincrement())
  token       String   @unique
  name        String?  // Optional name/description for the token
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  lastUsed    DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  expiresAt   DateTime?
  isRevoked   Boolean  @default(false)
}
